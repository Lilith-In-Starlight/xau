[folding]

node_unfolds=[NodePath("House"), PackedStringArray("Offset"), NodePath("Cable"), PackedStringArray("Visibility", "Border"), NodePath("Cable/Cable2"), PackedStringArray("Visibility", "Border"), NodePath("Cable/Cable3"), PackedStringArray("Border"), NodePath("Cable2"), PackedStringArray("Transform", "Border"), NodePath("Cable2/Cable3"), PackedStringArray("Visibility", "Border"), NodePath("Cable2/Cable4"), PackedStringArray("Border"), NodePath("Tutorial"), PackedStringArray("Transform"), NodePath("Tutorial/PuzzleNode2"), PackedStringArray("Transform"), NodePath("PuzzleSequence"), PackedStringArray("Transform"), NodePath("PuzzleSequence/PuzzleGrid/PuzzleNode"), PackedStringArray("Transform", "node_rule"), NodePath("PuzzleSequence/PuzzleGrid/PuzzleNode2"), PackedStringArray("Transform"), NodePath("PuzzleSequence/PuzzleGrid/PuzzleNode3"), PackedStringArray("Transform"), NodePath("PuzzleSequence/PuzzleGrid2"), PackedStringArray("Transform"), NodePath("PuzzleSequence/PuzzleGrid2/PuzzleNode2"), PackedStringArray("Transform"), NodePath("PuzzleSequence/PuzzleGrid2/PuzzleNode3"), PackedStringArray("Transform"), NodePath("PuzzleSequence/PuzzleGrid2/PuzzleNode4"), PackedStringArray("Transform"), NodePath("PuzzleSequence/PuzzleGrid2/Blockade"), PackedStringArray("Transform"), NodePath("PuzzleSequence/PuzzleGrid3"), PackedStringArray("Transform"), NodePath("PuzzleSequence/PuzzleGrid3/PuzzleNode2"), PackedStringArray("Transform"), NodePath("PuzzleSequence/PuzzleGrid3/PuzzleNode3"), PackedStringArray("Transform"), NodePath("PuzzleSequence/PuzzleGrid3/PuzzleNode4"), PackedStringArray("Transform"), NodePath("PuzzleSequence/PuzzleGrid3/Blockade"), PackedStringArray("Transform"), NodePath("PuzzleSequence/PuzzleGrid3/Blockade2"), PackedStringArray("Transform"), NodePath("PuzzleSequence/PuzzleGrid4"), PackedStringArray("Transform"), NodePath("PuzzleSequence/PuzzleGrid4/PuzzleNode2"), PackedStringArray("Transform"), NodePath("PuzzleSequence/PuzzleGrid4/PuzzleNode3"), PackedStringArray("Transform"), NodePath("PuzzleSequence/PuzzleGrid4/PuzzleNode4"), PackedStringArray("Transform"), NodePath("PuzzleSequence/PuzzleGrid4/Blockade"), PackedStringArray("Transform"), NodePath("PuzzleSequence/PuzzleGrid4/Blockade3"), PackedStringArray("Transform"), NodePath("PuzzleSequence/PuzzleGrid4/Blockade4"), PackedStringArray("Transform"), NodePath("PuzzleSequence/PuzzleGrid4/Blockade2"), PackedStringArray("Transform"), NodePath("PuzzleSequence/PuzzleGrid5"), PackedStringArray("Transform"), NodePath("PuzzleSequence/PuzzleGrid5/PuzzleNode2"), PackedStringArray("Transform"), NodePath("PuzzleSequence/PuzzleGrid5/PuzzleNode3"), PackedStringArray("Transform"), NodePath("PuzzleSequence/PuzzleGrid5/PuzzleNode4"), PackedStringArray("Transform"), NodePath("PuzzleSequence/PuzzleGrid5/Blockade"), PackedStringArray("Transform"), NodePath("PuzzleSequence/PuzzleGrid5/Blockade2"), PackedStringArray("Transform"), NodePath("PuzzleSequence/PuzzleGrid5/Blockade3"), PackedStringArray("Transform"), NodePath("Jail"), PackedStringArray("Transform"), NodePath("Door"), PackedStringArray("Transform"), NodePath("WorldCollision"), PackedStringArray("Ordering", "Collision")]
resource_unfolds=["res://areas/house/house_room_1.tscn::Resource_d7nqp", PackedStringArray(), "res://areas/house/house_room_1.tscn::Resource_dbflq", PackedStringArray(), "res://areas/house/house_room_1.tscn::Resource_2f2lg", PackedStringArray(), "res://areas/house/house_room_1.tscn::Resource_ohefs", PackedStringArray(), "res://areas/house/house_room_1.tscn::Resource_yigd0", PackedStringArray(), "res://areas/house/house_room_1.tscn::Resource_er1eh", PackedStringArray(), "res://areas/house/house_room_1.tscn::Resource_d7oxg", PackedStringArray(), "res://areas/house/house_room_1.tscn::Resource_wgxvm", PackedStringArray(), "res://areas/house/house_room_1.tscn::Resource_ckfte", PackedStringArray(), "res://areas/house/house_room_1.tscn::Resource_lifaw", PackedStringArray(), "res://areas/house/house_room_1.tscn::Resource_75trc", PackedStringArray(), "res://areas/house/house_room_1.tscn::Resource_2vhjs", PackedStringArray()]
nodes_folded=[]
